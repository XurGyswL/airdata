import os
import numpy as np
import pandas as pd
import plotly.graph_objects as go

df = pd.DataFrame()
df_tem = pd.DataFrame()
file_range = ["2012", "2013","2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021"]


for path , dir, file in os.walk("source\\air_data"):
    for f in file:
        if (os.path.splitext(f)[0][-8:-4]) in file_range:
            file_path = "source\\air_data\\"+f
            df_tem = pd.read_csv(file_path, low_memory=False)
            df_tem = df_tem[df_tem.itemengname == "PM2.5"]
            df_tem.drop(["siteid", "itemid", "itemname", "itemunit", "itemengname"], axis=1, inplace=True)
            df_tem.insert(1, "年分", os.path.splitext(f)[0][-8:-4])
            df_tem.insert(2, "月分", os.path.splitext(f)[0].split("-")[1][0:2])
            df_tem.columns = ["測站", "年份", "月份", "日期", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
            
            df_tem = df_tem[(df_tem.測站 == "大里") | (df_tem.測站 == "西屯") | (df_tem.測站 == "忠明") | (df_tem.測站 == "沙鹿") | (df_tem.測站 == "豐原") ]
            df = pd.concat([df, df_tem], axis = 0)
            df.reset_index(drop=True, inplace=True)


dfs1 = pd.DataFrame()
dfs1 = df[df.測站 == "大里"].copy()
for i in range(4,28):
    dfs1[dfs1.columns[i]] = pd.to_numeric(dfs1[dfs1.columns[i]], errors = "coerce")
dfs1.reset_index(drop = True, inplace = True)

hour = np.array([range(0,24)])
hour = np.reshape(hour, (24,1))
dfs1_ave = pd.DataFrame(hour, columns = ["平均"])
dfs1_ave.平均 = dfs1.iloc[:, 4:29].mean(axis = 0, skipna = True)

dfs2 = pd.DataFrame()
dfs2 = df[df.測站 == "西屯"].copy()
for i in range(4,28):
    dfs2[dfs2.columns[i]] = pd.to_numeric(dfs2[dfs2.columns[i]], errors = "coerce")
dfs2.reset_index(drop = True, inplace = True)

hour = np.array([range(0,24)])
hour = np.reshape(hour, (24,1))
dfs2_ave = pd.DataFrame(hour, columns = ["平均"])
dfs2_ave.平均 = dfs2.iloc[:, 4:29].mean(axis = 0, skipna = True)

dfs3 = pd.DataFrame()
dfs3 = df[df.測站 == "忠明"].copy()
for i in range(4,28):
    dfs3[dfs3.columns[i]] = pd.to_numeric(dfs3[dfs3.columns[i]], errors = "coerce")
dfs3.reset_index(drop = True, inplace = True)

hour = np.array([range(0,24)])
hour = np.reshape(hour, (24,1))
dfs3_ave = pd.DataFrame(hour, columns = ["平均"])
dfs3_ave.平均 = dfs3.iloc[:, 4:29].mean(axis = 0, skipna = True)

dfs4 = pd.DataFrame()
dfs4 = df[df.測站 == "沙鹿"].copy()
for i in range(4,28):
    dfs4[dfs4.columns[i]] = pd.to_numeric(dfs4[dfs4.columns[i]], errors = "coerce")
dfs4.reset_index(drop = True, inplace = True)

hour = np.array([range(0,24)])
hour = np.reshape(hour, (24,1))
dfs4_ave = pd.DataFrame(hour, columns = ["平均"])
dfs4_ave.平均 = dfs4.iloc[:, 4:29].mean(axis = 0, skipna = True)

dfs5 = pd.DataFrame()
dfs5 = df[df.測站 == "豐原"].copy()
for i in range(4,28):
    dfs5[dfs5.columns[i]] = pd.to_numeric(dfs5[dfs5.columns[i]], errors = "coerce")
dfs4.reset_index(drop = True, inplace = True)

hour = np.array([range(0,24)])
hour = np.reshape(hour, (24,1))
dfs5_ave = pd.DataFrame(hour, columns = ["平均"])
dfs5_ave.平均 = dfs5.iloc[:, 4:29].mean(axis = 0, skipna = True)


line_s1 = go.Scatter(
    x=dfs1_ave.index,
    y=dfs1_ave["平均"],
    mode='lines+markers+text',
    name="大里",
    #text=dfs1_ave["平均"],
    #textposition="top left",
    #textfont = dict(color="black"),
    line_color="red",
    marker_color="red",
    hovertemplate="<b>%{x}</b> 月<br><b>%{y}</b> µm<extra></extra>"
)
    
line_s2 = go.Scatter(
    x=dfs2_ave.index,
    y=dfs2_ave["平均"],
    mode='lines+markers+text',
    name="西屯",
    #text=dfs2_ave["平均"],
    #textposition="top left",
    #textfont = dict(color="black"),
    line_color="orange",
    marker_color="orange",
    hovertemplate="<b>%{x}</b> 時<br><b>%{y}</b> µm<extra></extra>"
)
    

line_s3 = go.Scatter(
    x=dfs3_ave.index,
    y=dfs3_ave["平均"],
    mode='lines+markers+text',
    name="忠明",
    #text=dfs1_ave["平均"],
    #textposition="top left",
    #textfont = dict(color="black"),
    line_color="yellow",
    marker_color="yellow",
    hovertemplate="<b>%{x}</b> 時<br><b>%{y}</b> µm<extra></extra>"
)
    
    
line_s4 = go.Scatter(
    x=dfs4_ave.index,
    y=dfs4_ave["平均"],
    mode='lines+markers+text',
    name="沙鹿",
    #text=dfs1_ave["平均"],
    #textposition="top left",
    #textfont = dict(color="black"),
    line_color="green",
    marker_color="green",
    hovertemplate="<b>%{x}</b> 時<br><b>%{y}</b> µm<extra></extra>"
)
    

line_s5 = go.Scatter(
    x=dfs5_ave.index,
    y=dfs5_ave["平均"],
    mode='lines+markers+text',
    name="豐原",
    #text=dfs1_ave["平均"],
    #textposition="top left",
    #textfont = dict(color="black"),
    line_color="blue",
    marker_color="blue",
    hovertemplate="<b>%{x}</b> 時<br><b>%{y}</b> µm<extra></extra>"
)

  

fig = go.Figure([line_s1, line_s2, line_s3, line_s4, line_s5])
fig.update_layout(
    title_text='台中市各測站近10年日平均',
    title_font_size=30,
    title_x=0.5,
    xaxis_title="小時",
    xaxis_range=[0, 23],
    xaxis_tickmode="linear",
    yaxis_title="PM2.5 (µm)"
)
